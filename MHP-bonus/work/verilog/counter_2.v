/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module counter_2 (
    input clk,
    input rst,
    input sum,
    input carry,
    input clock,
    output reg [2:0] count
  );
  
  
  
  wire [1-1:0] M_edge_detector_out;
  reg [1-1:0] M_edge_detector_in;
  edge_detector_4 edge_detector (
    .clk(clk),
    .in(M_edge_detector_in),
    .out(M_edge_detector_out)
  );
  reg [2:0] M_ctr_d, M_ctr_q = 1'h0;
  
  always @* begin
    M_ctr_d = M_ctr_q;
    
    M_edge_detector_in = clock;
    count = M_ctr_q;
    if (M_edge_detector_out) begin
      if (sum == M_ctr_q[0+0-:1] + M_ctr_q[1+0-:1] + M_ctr_q[2+0-:1] && carry == M_ctr_q[0+0-:1] + M_ctr_q[1+0-:1] + M_ctr_q[2+0-:1] >= 2'h2 ? 1'h1 : 1'h0) begin
        M_ctr_d = M_ctr_q + 1'h1;
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_ctr_q <= 1'h0;
    end else begin
      M_ctr_q <= M_ctr_d;
    end
  end
  
endmodule
